{"ast":null,"code":"var re = Object.create;\nvar R = Object.defineProperty;\nvar ie = Object.getOwnPropertyDescriptor;\nvar oe = Object.getOwnPropertyNames;\nvar ae = Object.getPrototypeOf,\n  se = Object.prototype.hasOwnProperty;\nvar f = (t, e) => R(t, \"name\", {\n    value: e,\n    configurable: !0\n  }),\n  w = (t => typeof require < \"u\" ? require : typeof Proxy < \"u\" ? new Proxy(t, {\n    get: (e, o) => (typeof require < \"u\" ? require : e)[o]\n  }) : t)(function (t) {\n    if (typeof require < \"u\") return require.apply(this, arguments);\n    throw new Error('Dynamic require of \"' + t + '\" is not supported');\n  });\nvar D = (t, e) => () => (e || t((e = {\n  exports: {}\n}).exports, e), e.exports);\nvar ce = (t, e, o, a) => {\n  if (e && typeof e == \"object\" || typeof e == \"function\") for (let l of oe(e)) !se.call(t, l) && l !== o && R(t, l, {\n    get: () => e[l],\n    enumerable: !(a = ie(e, l)) || a.enumerable\n  });\n  return t;\n};\nvar le = (t, e, o) => (o = t != null ? re(ae(t)) : {}, ce(e || !t || !t.__esModule ? R(o, \"default\", {\n  value: t,\n  enumerable: !0\n}) : o, t));\nvar T = D((O, U) => {\n  (function (t, e) {\n    \"use strict\";\n\n    typeof define == \"function\" && define.amd ? define(\"stackframe\", [], e) : typeof O == \"object\" ? U.exports = e() : t.StackFrame = e();\n  })(O, function () {\n    \"use strict\";\n\n    function t(d) {\n      return !isNaN(parseFloat(d)) && isFinite(d);\n    }\n    f(t, \"_isNumber\");\n    function e(d) {\n      return d.charAt(0).toUpperCase() + d.substring(1);\n    }\n    f(e, \"_capitalize\");\n    function o(d) {\n      return function () {\n        return this[d];\n      };\n    }\n    f(o, \"_getter\");\n    var a = [\"isConstructor\", \"isEval\", \"isNative\", \"isToplevel\"],\n      l = [\"columnNumber\", \"lineNumber\"],\n      n = [\"fileName\", \"functionName\", \"source\"],\n      r = [\"args\"],\n      u = [\"evalOrigin\"],\n      i = a.concat(l, n, r, u);\n    function c(d) {\n      if (d) for (var y = 0; y < i.length; y++) d[i[y]] !== void 0 && this[\"set\" + e(i[y])](d[i[y]]);\n    }\n    f(c, \"StackFrame\"), c.prototype = {\n      getArgs: function () {\n        return this.args;\n      },\n      setArgs: function (d) {\n        if (Object.prototype.toString.call(d) !== \"[object Array]\") throw new TypeError(\"Args must be an Array\");\n        this.args = d;\n      },\n      getEvalOrigin: function () {\n        return this.evalOrigin;\n      },\n      setEvalOrigin: function (d) {\n        if (d instanceof c) this.evalOrigin = d;else if (d instanceof Object) this.evalOrigin = new c(d);else throw new TypeError(\"Eval Origin must be an Object or StackFrame\");\n      },\n      toString: function () {\n        var d = this.getFileName() || \"\",\n          y = this.getLineNumber() || \"\",\n          h = this.getColumnNumber() || \"\",\n          v = this.getFunctionName() || \"\";\n        return this.getIsEval() ? d ? \"[eval] (\" + d + \":\" + y + \":\" + h + \")\" : \"[eval]:\" + y + \":\" + h : v ? v + \" (\" + d + \":\" + y + \":\" + h + \")\" : d + \":\" + y + \":\" + h;\n      }\n    }, c.fromString = f(function (y) {\n      var h = y.indexOf(\"(\"),\n        v = y.lastIndexOf(\")\"),\n        Q = y.substring(0, h),\n        Z = y.substring(h + 1, v).split(\",\"),\n        L = y.substring(v + 1);\n      if (L.indexOf(\"@\") === 0) var _ = /@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(L, \"\"),\n        ee = _[1],\n        te = _[2],\n        ne = _[3];\n      return new c({\n        functionName: Q,\n        args: Z || void 0,\n        fileName: ee,\n        lineNumber: te || void 0,\n        columnNumber: ne || void 0\n      });\n    }, \"StackFrame$$fromString\");\n    for (var s = 0; s < a.length; s++) c.prototype[\"get\" + e(a[s])] = o(a[s]), c.prototype[\"set\" + e(a[s])] = function (d) {\n      return function (y) {\n        this[d] = !!y;\n      };\n    }(a[s]);\n    for (var m = 0; m < l.length; m++) c.prototype[\"get\" + e(l[m])] = o(l[m]), c.prototype[\"set\" + e(l[m])] = function (d) {\n      return function (y) {\n        if (!t(y)) throw new TypeError(d + \" must be a Number\");\n        this[d] = Number(y);\n      };\n    }(l[m]);\n    for (var p = 0; p < n.length; p++) c.prototype[\"get\" + e(n[p])] = o(n[p]), c.prototype[\"set\" + e(n[p])] = function (d) {\n      return function (y) {\n        this[d] = String(y);\n      };\n    }(n[p]);\n    return c;\n  });\n});\nvar $ = D((N, M) => {\n  (function (t, e) {\n    \"use strict\";\n\n    typeof define == \"function\" && define.amd ? define(\"error-stack-parser\", [\"stackframe\"], e) : typeof N == \"object\" ? M.exports = e(T()) : t.ErrorStackParser = e(t.StackFrame);\n  })(N, f(function (e) {\n    \"use strict\";\n\n    var o = /(^|@)\\S+:\\d+/,\n      a = /^\\s*at .*(\\S+:\\d+|\\(native\\))/m,\n      l = /^(eval@)?(\\[native code])?$/;\n    return {\n      parse: f(function (r) {\n        if (typeof r.stacktrace < \"u\" || typeof r[\"opera#sourceloc\"] < \"u\") return this.parseOpera(r);\n        if (r.stack && r.stack.match(a)) return this.parseV8OrIE(r);\n        if (r.stack) return this.parseFFOrSafari(r);\n        throw new Error(\"Cannot parse given Error object\");\n      }, \"ErrorStackParser$$parse\"),\n      extractLocation: f(function (r) {\n        if (r.indexOf(\":\") === -1) return [r];\n        var u = /(.+?)(?::(\\d+))?(?::(\\d+))?$/,\n          i = u.exec(r.replace(/[()]/g, \"\"));\n        return [i[1], i[2] || void 0, i[3] || void 0];\n      }, \"ErrorStackParser$$extractLocation\"),\n      parseV8OrIE: f(function (r) {\n        var u = r.stack.split(`\n`).filter(function (i) {\n          return !!i.match(a);\n        }, this);\n        return u.map(function (i) {\n          i.indexOf(\"(eval \") > -1 && (i = i.replace(/eval code/g, \"eval\").replace(/(\\(eval at [^()]*)|(,.*$)/g, \"\"));\n          var c = i.replace(/^\\s+/, \"\").replace(/\\(eval code/g, \"(\").replace(/^.*?\\s+/, \"\"),\n            s = c.match(/ (\\(.+\\)$)/);\n          c = s ? c.replace(s[0], \"\") : c;\n          var m = this.extractLocation(s ? s[1] : c),\n            p = s && c || void 0,\n            d = [\"eval\", \"<anonymous>\"].indexOf(m[0]) > -1 ? void 0 : m[0];\n          return new e({\n            functionName: p,\n            fileName: d,\n            lineNumber: m[1],\n            columnNumber: m[2],\n            source: i\n          });\n        }, this);\n      }, \"ErrorStackParser$$parseV8OrIE\"),\n      parseFFOrSafari: f(function (r) {\n        var u = r.stack.split(`\n`).filter(function (i) {\n          return !i.match(l);\n        }, this);\n        return u.map(function (i) {\n          if (i.indexOf(\" > eval\") > -1 && (i = i.replace(/ line (\\d+)(?: > eval line \\d+)* > eval:\\d+:\\d+/g, \":$1\")), i.indexOf(\"@\") === -1 && i.indexOf(\":\") === -1) return new e({\n            functionName: i\n          });\n          var c = /((.*\".+\"[^@]*)?[^@]*)(?:@)/,\n            s = i.match(c),\n            m = s && s[1] ? s[1] : void 0,\n            p = this.extractLocation(i.replace(c, \"\"));\n          return new e({\n            functionName: m,\n            fileName: p[0],\n            lineNumber: p[1],\n            columnNumber: p[2],\n            source: i\n          });\n        }, this);\n      }, \"ErrorStackParser$$parseFFOrSafari\"),\n      parseOpera: f(function (r) {\n        return !r.stacktrace || r.message.indexOf(`\n`) > -1 && r.message.split(`\n`).length > r.stacktrace.split(`\n`).length ? this.parseOpera9(r) : r.stack ? this.parseOpera11(r) : this.parseOpera10(r);\n      }, \"ErrorStackParser$$parseOpera\"),\n      parseOpera9: f(function (r) {\n        for (var u = /Line (\\d+).*script (?:in )?(\\S+)/i, i = r.message.split(`\n`), c = [], s = 2, m = i.length; s < m; s += 2) {\n          var p = u.exec(i[s]);\n          p && c.push(new e({\n            fileName: p[2],\n            lineNumber: p[1],\n            source: i[s]\n          }));\n        }\n        return c;\n      }, \"ErrorStackParser$$parseOpera9\"),\n      parseOpera10: f(function (r) {\n        for (var u = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i, i = r.stacktrace.split(`\n`), c = [], s = 0, m = i.length; s < m; s += 2) {\n          var p = u.exec(i[s]);\n          p && c.push(new e({\n            functionName: p[3] || void 0,\n            fileName: p[2],\n            lineNumber: p[1],\n            source: i[s]\n          }));\n        }\n        return c;\n      }, \"ErrorStackParser$$parseOpera10\"),\n      parseOpera11: f(function (r) {\n        var u = r.stack.split(`\n`).filter(function (i) {\n          return !!i.match(o) && !i.match(/^Error created at/);\n        }, this);\n        return u.map(function (i) {\n          var c = i.split(\"@\"),\n            s = this.extractLocation(c.pop()),\n            m = c.shift() || \"\",\n            p = m.replace(/<anonymous function(: (\\w+))?>/, \"$2\").replace(/\\([^)]*\\)/g, \"\") || void 0,\n            d;\n          m.match(/\\(([^)]*)\\)/) && (d = m.replace(/^[^(]+\\(([^)]*)\\)$/, \"$1\"));\n          var y = d === void 0 || d === \"[arguments not available]\" ? void 0 : d.split(\",\");\n          return new e({\n            functionName: p,\n            args: y,\n            fileName: s[0],\n            lineNumber: s[1],\n            columnNumber: s[2],\n            source: i\n          });\n        }, this);\n      }, \"ErrorStackParser$$parseOpera11\")\n    };\n  }, \"ErrorStackParser\"));\n});\nvar z = le($());\nvar g = typeof process == \"object\" && typeof process.versions == \"object\" && typeof process.versions.node == \"string\" && typeof process.browser > \"u\",\n  F = g && typeof module < \"u\" && typeof module.exports < \"u\" && typeof w < \"u\" && typeof __dirname < \"u\",\n  C = g && !F,\n  de = typeof Deno < \"u\",\n  W = !g && !de,\n  j = W && typeof window == \"object\" && typeof document == \"object\" && typeof document.createElement == \"function\" && typeof sessionStorage == \"object\" && typeof importScripts != \"function\",\n  B = W && typeof importScripts == \"function\" && typeof self == \"object\",\n  Ne = typeof navigator == \"object\" && typeof navigator.userAgent == \"string\" && navigator.userAgent.indexOf(\"Chrome\") == -1 && navigator.userAgent.indexOf(\"Safari\") > -1;\nvar q, P, V, H, x;\nasync function I() {\n  if (!g || (q = (await import(\"node:url\")).default, H = await import(\"node:fs\"), x = await import(\"node:fs/promises\"), V = (await import(\"node:vm\")).default, P = await import(\"node:path\"), k = P.sep, typeof w < \"u\")) return;\n  let t = H,\n    e = await import(\"node:crypto\"),\n    o = await import(\"ws\"),\n    a = await import(\"node:child_process\"),\n    l = {\n      fs: t,\n      crypto: e,\n      ws: o,\n      child_process: a\n    };\n  globalThis.require = function (n) {\n    return l[n];\n  };\n}\nf(I, \"initNodeModules\");\nfunction fe(t, e) {\n  return P.resolve(e || \".\", t);\n}\nf(fe, \"node_resolvePath\");\nfunction ue(t, e) {\n  return e === void 0 && (e = location), new URL(t, e).toString();\n}\nf(ue, \"browser_resolvePath\");\nvar S;\ng ? S = fe : S = ue;\nvar k;\ng || (k = \"/\");\nfunction pe(t, e) {\n  return t.startsWith(\"file://\") && (t = t.slice(7)), t.includes(\"://\") ? {\n    response: fetch(t)\n  } : {\n    binary: x.readFile(t).then(o => new Uint8Array(o.buffer, o.byteOffset, o.byteLength))\n  };\n}\nf(pe, \"node_getBinaryResponse\");\nfunction me(t, e) {\n  let o = new URL(t, location);\n  return {\n    response: fetch(o, e ? {\n      integrity: e\n    } : {})\n  };\n}\nf(me, \"browser_getBinaryResponse\");\nvar b;\ng ? b = pe : b = me;\nasync function K(t, e) {\n  let {\n    response: o,\n    binary: a\n  } = b(t, e);\n  if (a) return a;\n  let l = await o;\n  if (!l.ok) throw new Error(`Failed to load '${t}': request failed.`);\n  return new Uint8Array(await l.arrayBuffer());\n}\nf(K, \"loadBinaryFile\");\nvar E;\nif (j) E = f(async t => await import(t), \"loadScript\");else if (B) E = f(async t => {\n  try {\n    globalThis.importScripts(t);\n  } catch (e) {\n    if (e instanceof TypeError) await import(t);else throw e;\n  }\n}, \"loadScript\");else if (g) E = ye;else throw new Error(\"Cannot determine runtime environment\");\nasync function ye(t) {\n  t.startsWith(\"file://\") && (t = t.slice(7)), t.includes(\"://\") ? V.runInThisContext(await (await fetch(t)).text()) : await import(q.pathToFileURL(t).href);\n}\nf(ye, \"nodeLoadScript\");\nasync function J(t) {\n  if (g) {\n    await I();\n    let e = await x.readFile(t, {\n      encoding: \"utf8\"\n    });\n    return JSON.parse(e);\n  } else return await (await fetch(t)).json();\n}\nf(J, \"loadLockFile\");\nasync function X() {\n  if (F) return __dirname;\n  let t;\n  try {\n    throw new Error();\n  } catch (a) {\n    t = a;\n  }\n  let e = z.default.parse(t)[0].fileName;\n  if (C) {\n    let a = await import(\"node:path\");\n    return (await import(\"node:url\")).fileURLToPath(a.dirname(e));\n  }\n  let o = e.lastIndexOf(k);\n  if (o === -1) throw new Error(\"Could not extract indexURL path from pyodide module location\");\n  return e.slice(0, o);\n}\nf(X, \"calculateDirname\");\nfunction G(t) {\n  let e = t.FS,\n    o = t.FS.filesystems.MEMFS,\n    a = t.PATH,\n    l = {\n      DIR_MODE: 16895,\n      FILE_MODE: 33279,\n      mount: function (n) {\n        if (!n.opts.fileSystemHandle) throw new Error(\"opts.fileSystemHandle is required\");\n        return o.mount.apply(null, arguments);\n      },\n      syncfs: async (n, r, u) => {\n        try {\n          let i = l.getLocalSet(n),\n            c = await l.getRemoteSet(n),\n            s = r ? c : i,\n            m = r ? i : c;\n          await l.reconcile(n, s, m), u(null);\n        } catch (i) {\n          u(i);\n        }\n      },\n      getLocalSet: n => {\n        let r = Object.create(null);\n        function u(s) {\n          return s !== \".\" && s !== \"..\";\n        }\n        f(u, \"isRealDir\");\n        function i(s) {\n          return m => a.join2(s, m);\n        }\n        f(i, \"toAbsolute\");\n        let c = e.readdir(n.mountpoint).filter(u).map(i(n.mountpoint));\n        for (; c.length;) {\n          let s = c.pop(),\n            m = e.stat(s);\n          e.isDir(m.mode) && c.push.apply(c, e.readdir(s).filter(u).map(i(s))), r[s] = {\n            timestamp: m.mtime,\n            mode: m.mode\n          };\n        }\n        return {\n          type: \"local\",\n          entries: r\n        };\n      },\n      getRemoteSet: async n => {\n        let r = Object.create(null),\n          u = await ge(n.opts.fileSystemHandle);\n        for (let [i, c] of u) i !== \".\" && (r[a.join2(n.mountpoint, i)] = {\n          timestamp: c.kind === \"file\" ? (await c.getFile()).lastModifiedDate : new Date(),\n          mode: c.kind === \"file\" ? l.FILE_MODE : l.DIR_MODE\n        });\n        return {\n          type: \"remote\",\n          entries: r,\n          handles: u\n        };\n      },\n      loadLocalEntry: n => {\n        let u = e.lookupPath(n).node,\n          i = e.stat(n);\n        if (e.isDir(i.mode)) return {\n          timestamp: i.mtime,\n          mode: i.mode\n        };\n        if (e.isFile(i.mode)) return u.contents = o.getFileDataAsTypedArray(u), {\n          timestamp: i.mtime,\n          mode: i.mode,\n          contents: u.contents\n        };\n        throw new Error(\"node type not supported\");\n      },\n      storeLocalEntry: (n, r) => {\n        if (e.isDir(r.mode)) e.mkdirTree(n, r.mode);else if (e.isFile(r.mode)) e.writeFile(n, r.contents, {\n          canOwn: !0\n        });else throw new Error(\"node type not supported\");\n        e.chmod(n, r.mode), e.utime(n, r.timestamp, r.timestamp);\n      },\n      removeLocalEntry: n => {\n        var r = e.stat(n);\n        e.isDir(r.mode) ? e.rmdir(n) : e.isFile(r.mode) && e.unlink(n);\n      },\n      loadRemoteEntry: async n => {\n        if (n.kind === \"file\") {\n          let r = await n.getFile();\n          return {\n            contents: new Uint8Array(await r.arrayBuffer()),\n            mode: l.FILE_MODE,\n            timestamp: r.lastModifiedDate\n          };\n        } else {\n          if (n.kind === \"directory\") return {\n            mode: l.DIR_MODE,\n            timestamp: new Date()\n          };\n          throw new Error(\"unknown kind: \" + n.kind);\n        }\n      },\n      storeRemoteEntry: async (n, r, u) => {\n        let i = n.get(a.dirname(r)),\n          c = e.isFile(u.mode) ? await i.getFileHandle(a.basename(r), {\n            create: !0\n          }) : await i.getDirectoryHandle(a.basename(r), {\n            create: !0\n          });\n        if (c.kind === \"file\") {\n          let s = await c.createWritable();\n          await s.write(u.contents), await s.close();\n        }\n        n.set(r, c);\n      },\n      removeRemoteEntry: async (n, r) => {\n        await n.get(a.dirname(r)).removeEntry(a.basename(r)), n.delete(r);\n      },\n      reconcile: async (n, r, u) => {\n        let i = 0,\n          c = [];\n        Object.keys(r.entries).forEach(function (p) {\n          let d = r.entries[p],\n            y = u.entries[p];\n          (!y || e.isFile(d.mode) && d.timestamp.getTime() > y.timestamp.getTime()) && (c.push(p), i++);\n        }), c.sort();\n        let s = [];\n        if (Object.keys(u.entries).forEach(function (p) {\n          r.entries[p] || (s.push(p), i++);\n        }), s.sort().reverse(), !i) return;\n        let m = r.type === \"remote\" ? r.handles : u.handles;\n        for (let p of c) {\n          let d = a.normalize(p.replace(n.mountpoint, \"/\")).substring(1);\n          if (u.type === \"local\") {\n            let y = m.get(d),\n              h = await l.loadRemoteEntry(y);\n            l.storeLocalEntry(p, h);\n          } else {\n            let y = l.loadLocalEntry(p);\n            await l.storeRemoteEntry(m, d, y);\n          }\n        }\n        for (let p of s) if (u.type === \"local\") l.removeLocalEntry(p);else {\n          let d = a.normalize(p.replace(n.mountpoint, \"/\")).substring(1);\n          await l.removeRemoteEntry(m, d);\n        }\n      }\n    };\n  t.FS.filesystems.NATIVEFS_ASYNC = l;\n}\nf(G, \"initializeNativeFS\");\nvar ge = f(async t => {\n  let e = [];\n  async function o(l) {\n    for await (let n of l.values()) e.push(n), n.kind === \"directory\" && (await o(n));\n  }\n  f(o, \"collect\"), await o(t);\n  let a = new Map();\n  a.set(\".\", t);\n  for (let l of e) {\n    let n = (await t.resolve(l)).join(\"/\");\n    a.set(n, l);\n  }\n  return a;\n}, \"getFsHandles\");\nfunction Y(t) {\n  let e = {\n    noImageDecoding: !0,\n    noAudioDecoding: !0,\n    noWasmDecoding: !1,\n    preRun: we(t),\n    quit(o, a) {\n      throw e.exited = {\n        status: o,\n        toThrow: a\n      }, a;\n    },\n    print: t.stdout,\n    printErr: t.stderr,\n    arguments: t.args,\n    API: {\n      config: t\n    },\n    locateFile: o => t.indexURL + o,\n    instantiateWasm: Se(t.indexURL)\n  };\n  return e;\n}\nf(Y, \"createSettings\");\nfunction he(t) {\n  return function (e) {\n    let o = \"/\";\n    try {\n      e.FS.mkdirTree(t);\n    } catch (a) {\n      console.error(`Error occurred while making a home directory '${t}':`), console.error(a), console.error(`Using '${o}' for a home directory instead`), t = o;\n    }\n    e.FS.chdir(t);\n  };\n}\nf(he, \"createHomeDirectory\");\nfunction ve(t) {\n  return function (e) {\n    Object.assign(e.ENV, t);\n  };\n}\nf(ve, \"setEnvironment\");\nfunction Ee(t) {\n  return e => {\n    for (let o of t) e.FS.mkdirTree(o), e.FS.mount(e.FS.filesystems.NODEFS, {\n      root: o\n    }, o);\n  };\n}\nf(Ee, \"mountLocalDirectories\");\nfunction be(t) {\n  let e = K(t);\n  return o => {\n    let a = o._py_version_major(),\n      l = o._py_version_minor();\n    o.FS.mkdirTree(\"/lib\"), o.FS.mkdirTree(`/lib/python${a}.${l}/site-packages`), o.addRunDependency(\"install-stdlib\"), e.then(n => {\n      o.FS.writeFile(`/lib/python${a}${l}.zip`, n);\n    }).catch(n => {\n      console.error(\"Error occurred while installing the standard library:\"), console.error(n);\n    }).finally(() => {\n      o.removeRunDependency(\"install-stdlib\");\n    });\n  };\n}\nf(be, \"installStdlib\");\nfunction we(t) {\n  let e;\n  return t.stdLibURL != null ? e = t.stdLibURL : e = t.indexURL + \"python_stdlib.zip\", [be(e), he(t.env.HOME), ve(t.env), Ee(t._node_mounts), G];\n}\nf(we, \"getFileSystemInitializationFuncs\");\nfunction Se(t) {\n  let {\n    binary: e,\n    response: o\n  } = b(t + \"pyodide.asm.wasm\");\n  return function (a, l) {\n    return async function () {\n      try {\n        let n;\n        o ? n = await WebAssembly.instantiateStreaming(o, a) : n = await WebAssembly.instantiate(await e, a);\n        let {\n          instance: r,\n          module: u\n        } = n;\n        typeof WasmOffsetConverter < \"u\" && (wasmOffsetConverter = new WasmOffsetConverter(wasmBinary, u)), l(r, u);\n      } catch (n) {\n        console.warn(\"wasm instantiation failed!\"), console.warn(n);\n      }\n    }(), {};\n  };\n}\nf(Se, \"getInstantiateWasmFunc\");\nvar A = \"0.26.1\";\nasync function Be(t = {}) {\n  await I();\n  let e = t.indexURL || (await X());\n  e = S(e), e.endsWith(\"/\") || (e += \"/\"), t.indexURL = e;\n  let o = {\n      fullStdLib: !1,\n      jsglobals: globalThis,\n      stdin: globalThis.prompt ? globalThis.prompt : void 0,\n      lockFileURL: e + \"pyodide-lock.json\",\n      args: [],\n      _node_mounts: [],\n      env: {},\n      packageCacheDir: e,\n      packages: [],\n      enableRunUntilComplete: !1\n    },\n    a = Object.assign(o, t);\n  a.env.HOME || (a.env.HOME = \"/home/pyodide\");\n  let l = Y(a),\n    n = l.API;\n  if (n.lockFilePromise = J(a.lockFileURL), typeof _createPyodideModule != \"function\") {\n    let s = `${a.indexURL}pyodide.asm.js`;\n    await E(s);\n  }\n  let r;\n  if (t._loadSnapshot) {\n    let s = await t._loadSnapshot;\n    ArrayBuffer.isView(s) ? r = s : r = new Uint8Array(s), l.noInitialRun = !0, l.INITIAL_MEMORY = r.length;\n  }\n  let u = await _createPyodideModule(l);\n  if (l.exited) throw l.exited.toThrow;\n  if (t.pyproxyToStringRepr && n.setPyProxyToStringMethod(!0), n.version !== A) throw new Error(`Pyodide version does not match: '${A}' <==> '${n.version}'. If you updated the Pyodide version, make sure you also updated the 'indexURL' parameter passed to loadPyodide.`);\n  u.locateFile = s => {\n    throw new Error(\"Didn't expect to load any more file_packager files!\");\n  };\n  let i;\n  r && (i = n.restoreSnapshot(r));\n  let c = n.finalizeBootstrap(i);\n  return n.sys.path.insert(0, n.config.env.HOME), c.version.includes(\"dev\") || n.setCdnUrl(`https://cdn.jsdelivr.net/pyodide/v${c.version}/full/`), n._pyodide.set_excepthook(), await n.packageIndexReady, n.initializeStreams(a.stdin, a.stdout, a.stderr), c;\n}\nf(Be, \"loadPyodide\");\nexport { Be as loadPyodide, A as version };","map":{"version":3,"names":["T","D","O","U","t","e","define","amd","exports","StackFrame","d","isNaN","parseFloat","isFinite","f","charAt","toUpperCase","substring","o","a","l","n","r","u","i","concat","c","y","length","prototype","getArgs","args","setArgs","Object","toString","call","TypeError","getEvalOrigin","evalOrigin","setEvalOrigin","getFileName","getLineNumber","h","getColumnNumber","v","getFunctionName","getIsEval","fromString","indexOf","lastIndexOf","Q","Z","split","L","_","exec","ee","te","ne","functionName","fileName","lineNumber","columnNumber","s","m","Number","p","String","$","N","M","ErrorStackParser","parse","stacktrace","parseOpera","stack","match","parseV8OrIE","parseFFOrSafari","Error","extractLocation","replace","filter","map","source","message","parseOpera9","parseOpera11","parseOpera10","push","pop","shift","z","le","g","process","versions","node","browser","F","module","w","__dirname","C","de","Deno","W","j","window","document","createElement","sessionStorage","importScripts","B","self","Ne","navigator","userAgent","q","P","V","H","x","I","default","k","sep","fs","crypto","ws","child_process","globalThis","require","fe","resolve","ue","location","URL","S","pe","startsWith","slice","includes","response","fetch","binary","readFile","then","Uint8Array","buffer","byteOffset","byteLength","me","integrity","b","K","ok","arrayBuffer","E","ye","runInThisContext","text","pathToFileURL","href","J","encoding","JSON","json","X","fileURLToPath","dirname","G","FS","filesystems","MEMFS","PATH","DIR_MODE","FILE_MODE","mount","opts","fileSystemHandle","apply","arguments","syncfs","getLocalSet","getRemoteSet","reconcile","create","join2","readdir","mountpoint","stat","isDir","mode","timestamp","mtime","type","entries","ge","kind","getFile","lastModifiedDate","Date","handles","loadLocalEntry","lookupPath","isFile","contents","getFileDataAsTypedArray","storeLocalEntry","mkdirTree","writeFile","canOwn","chmod","utime","removeLocalEntry","rmdir","unlink","loadRemoteEntry","storeRemoteEntry","get","getFileHandle","basename","getDirectoryHandle","createWritable","write","close","set","removeRemoteEntry","removeEntry","delete","keys","forEach","getTime","sort","reverse","normalize","NATIVEFS_ASYNC","values","Map","join","Y","noImageDecoding","noAudioDecoding","noWasmDecoding","preRun","we","quit","exited","status","toThrow","print","stdout","printErr","stderr","API","config","locateFile","indexURL","instantiateWasm","Se","he","console","error","chdir","ve","assign","ENV","Ee","NODEFS","root","be","_py_version_major","_py_version_minor","addRunDependency","catch","finally","removeRunDependency","stdLibURL","env","HOME","_node_mounts","WebAssembly","instantiateStreaming","instantiate","instance","WasmOffsetConverter","wasmOffsetConverter","wasmBinary","warn","A","Be","endsWith","fullStdLib","jsglobals","stdin","prompt","lockFileURL","packageCacheDir","packages","enableRunUntilComplete","lockFilePromise","_createPyodideModule","_loadSnapshot","ArrayBuffer","isView","noInitialRun","INITIAL_MEMORY","pyproxyToStringRepr","setPyProxyToStringMethod","version","restoreSnapshot","finalizeBootstrap","sys","path","insert","setCdnUrl","_pyodide","set_excepthook","packageIndexReady","initializeStreams","loadPyodide"],"sources":["/Users/javier/Projects/QRCodeGen/qr-app/node_modules/src/js/node_modules/stackframe/stackframe.js","/Users/javier/Projects/QRCodeGen/qr-app/node_modules/src/js/node_modules/error-stack-parser/error-stack-parser.js","/Users/javier/Projects/QRCodeGen/qr-app/node_modules/src/js/compat.ts","/Users/javier/Projects/QRCodeGen/qr-app/node_modules/src/js/environments.ts","/Users/javier/Projects/QRCodeGen/qr-app/node_modules/src/js/nativefs.ts","/Users/javier/Projects/QRCodeGen/qr-app/node_modules/src/js/emscripten-settings.ts","/Users/javier/Projects/QRCodeGen/qr-app/node_modules/src/js/version.ts","/Users/javier/Projects/QRCodeGen/qr-app/node_modules/src/js/pyodide.ts"],"sourcesContent":["(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n    var objectProps = ['evalOrigin'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps, objectProps);\n\n    function StackFrame(obj) {\n        if (!obj) return;\n        for (var i = 0; i < props.length; i++) {\n            if (obj[props[i]] !== undefined) {\n                this['set' + _capitalize(props[i])](obj[props[i]]);\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var fileName = this.getFileName() || '';\n            var lineNumber = this.getLineNumber() || '';\n            var columnNumber = this.getColumnNumber() || '';\n            var functionName = this.getFunctionName() || '';\n            if (this.getIsEval()) {\n                if (fileName) {\n                    return '[eval] (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n                }\n                return '[eval]:' + lineNumber + ':' + columnNumber;\n            }\n            if (functionName) {\n                return functionName + ' (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n            }\n            return fileName + ':' + lineNumber + ':' + columnNumber;\n        }\n    };\n\n    StackFrame.fromString = function StackFrame$$fromString(str) {\n        var argsStartIndex = str.indexOf('(');\n        var argsEndIndex = str.lastIndexOf(')');\n\n        var functionName = str.substring(0, argsStartIndex);\n        var args = str.substring(argsStartIndex + 1, argsEndIndex).split(',');\n        var locationString = str.substring(argsEndIndex + 1);\n\n        if (locationString.indexOf('@') === 0) {\n            var parts = /@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(locationString, '');\n            var fileName = parts[1];\n            var lineNumber = parts[2];\n            var columnNumber = parts[3];\n        }\n\n        return new StackFrame({\n            functionName: functionName,\n            args: args || undefined,\n            fileName: fileName,\n            lineNumber: lineNumber || undefined,\n            columnNumber: columnNumber || undefined\n        });\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code])?$/;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?::(\\d+))?(?::(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[()]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^()]*)|(,.*$)/g, '');\n                }\n                var sanitizedLine = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').replace(/^.*?\\s+/, '');\n\n                // capture and preseve the parenthesized location \"(/foo/my bar.js:12:87)\" in\n                // case it has spaces in it, as the string is split on \\s+ later on\n                var location = sanitizedLine.match(/ (\\(.+\\)$)/);\n\n                // remove the parenthesized location from the line, if it was matched\n                sanitizedLine = location ? sanitizedLine.replace(location[0], '') : sanitizedLine;\n\n                // if a location was matched, pass it to extractLocation() otherwise pass all sanitizedLine\n                // because this line doesn't have function name\n                var locationParts = this.extractLocation(location ? location[1] : sanitizedLine);\n                var functionName = location && sanitizedLine || undefined;\n                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame({\n                    functionName: functionName,\n                    fileName: fileName,\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval:\\d+:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame({\n                        functionName: line\n                    });\n                } else {\n                    var functionNameRegex = /((.*\".+\"[^@]*)?[^@]*)(?:@)/;\n                    var matches = line.match(functionNameRegex);\n                    var functionName = matches && matches[1] ? matches[1] : undefined;\n                    var locationParts = this.extractLocation(line.replace(functionNameRegex, ''));\n\n                    return new StackFrame({\n                        functionName: functionName,\n                        fileName: locationParts[0],\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame({\n                        fileName: match[2],\n                        lineNumber: match[1],\n                        source: lines[i]\n                    }));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame({\n                            functionName: match[3] || undefined,\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        })\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return filtered.map(function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                    .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                    .replace(/\\([^)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^(]+\\(([^)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n\n                return new StackFrame({\n                    functionName: functionName,\n                    args: args,\n                    fileName: locationParts[0],\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        }\n    };\n}));\n","import ErrorStackParser from \"error-stack-parser\";\nimport {\n  IN_NODE,\n  IN_NODE_ESM,\n  IN_BROWSER_MAIN_THREAD,\n  IN_BROWSER_WEB_WORKER,\n  IN_NODE_COMMONJS,\n} from \"./environments\";\nimport { Lockfile } from \"./types\";\n\nlet nodeUrlMod: typeof import(\"node:url\");\nlet nodePath: typeof import(\"node:path\");\nlet nodeVmMod: typeof import(\"node:vm\");\n/** @private */\nexport let nodeFSMod: typeof import(\"node:fs\");\n/** @private */\nexport let nodeFsPromisesMod: typeof import(\"node:fs/promises\");\n\ndeclare var globalThis: {\n  importScripts: (url: string) => void;\n  document?: typeof document;\n  fetch?: typeof fetch;\n};\n\n/**\n * If we're in node, it's most convenient to import various node modules on\n * initialization. Otherwise, this does nothing.\n * @private\n */\nexport async function initNodeModules() {\n  if (!IN_NODE) {\n    return;\n  }\n  // @ts-ignore\n  nodeUrlMod = (await import(\"node:url\")).default;\n  nodeFSMod = await import(\"node:fs\");\n  nodeFsPromisesMod = await import(\"node:fs/promises\");\n\n  // @ts-ignore\n  nodeVmMod = (await import(\"node:vm\")).default;\n  nodePath = await import(\"node:path\");\n  pathSep = nodePath.sep;\n\n  // Emscripten uses `require`, so if it's missing (because we were imported as\n  // an ES6 module) we need to polyfill `require` with `import`. `import` is\n  // async and `require` is synchronous, so we import all packages that might be\n  // required up front and define require to look them up in this table.\n\n  if (typeof require !== \"undefined\") {\n    return;\n  }\n  // These are all the packages required in pyodide.asm.js. You can get this\n  // list with:\n  // $ grep -o 'require(\"[a-z]*\")' pyodide.asm.js  | sort -u\n  const fs = nodeFSMod;\n  const crypto = await import(\"node:crypto\");\n  const ws = await import(\"ws\");\n  const child_process = await import(\"node:child_process\");\n  const node_modules: { [mode: string]: any } = {\n    fs,\n    crypto,\n    ws,\n    child_process,\n  };\n  // Since we're in an ES6 module, this is only modifying the module namespace,\n  // it's still private to Pyodide.\n  (globalThis as any).require = function (mod: string): any {\n    return node_modules[mod];\n  };\n}\n\nfunction node_resolvePath(path: string, base?: string): string {\n  return nodePath.resolve(base || \".\", path);\n}\n\nfunction browser_resolvePath(path: string, base?: string): string {\n  if (base === undefined) {\n    // @ts-ignore\n    base = location;\n  }\n  return new URL(path, base).toString();\n}\n\nexport let resolvePath: (rest: string, base?: string) => string;\nif (IN_NODE) {\n  resolvePath = node_resolvePath;\n} else {\n  resolvePath = browser_resolvePath;\n}\n\n/**\n * Get the path separator. If we are on Linux or in the browser, it's /.\n * In Windows, it's \\.\n * @private\n */\nexport let pathSep: string;\n\nif (!IN_NODE) {\n  pathSep = \"/\";\n}\n\n/**\n * Load a binary file, only for use in Node. If the path explicitly is a URL,\n * then fetch from a URL, else load from the file system.\n * @param indexURL base path to resolve relative paths\n * @param path the path to load\n * @param checksum sha-256 checksum of the package\n * @returns An ArrayBuffer containing the binary data\n * @private\n */\nfunction node_getBinaryResponse(\n  path: string,\n  _file_sub_resource_hash?: string | undefined, // Ignoring sub resource hash. See issue-2431.\n):\n  | { response: Promise<Response>; binary?: undefined }\n  | { binary: Promise<Uint8Array> } {\n  if (path.startsWith(\"file://\")) {\n    // handle file:// with filesystem operations rather than with fetch.\n    path = path.slice(\"file://\".length);\n  }\n  if (path.includes(\"://\")) {\n    // If it has a protocol, make a fetch request\n    return { response: fetch(path) };\n  } else {\n    // Otherwise get it from the file system\n    return {\n      binary: nodeFsPromisesMod\n        .readFile(path)\n        .then(\n          (data: Buffer) =>\n            new Uint8Array(data.buffer, data.byteOffset, data.byteLength),\n        ),\n    };\n  }\n}\n\n/**\n * Load a binary file, only for use in browser. Resolves relative paths against\n * indexURL.\n *\n * @param path the path to load\n * @param subResourceHash the sub resource hash for fetch() integrity check\n * @returns A Uint8Array containing the binary data\n * @private\n */\nfunction browser_getBinaryResponse(\n  path: string,\n  subResourceHash: string | undefined,\n): { response: Promise<Response>; binary?: undefined } {\n  const url = new URL(path, location as unknown as URL);\n  let options = subResourceHash ? { integrity: subResourceHash } : {};\n  return { response: fetch(url, options) };\n}\n\n/** @private */\nexport let getBinaryResponse: (\n  path: string,\n  file_sub_resource_hash?: string | undefined,\n) =>\n  | { response: Promise<Response>; binary?: undefined }\n  | { response?: undefined; binary: Promise<Uint8Array> };\nif (IN_NODE) {\n  getBinaryResponse = node_getBinaryResponse;\n} else {\n  getBinaryResponse = browser_getBinaryResponse;\n}\n\nexport async function loadBinaryFile(\n  path: string,\n  file_sub_resource_hash?: string | undefined,\n): Promise<Uint8Array> {\n  const { response, binary } = getBinaryResponse(path, file_sub_resource_hash);\n  if (binary) {\n    return binary;\n  }\n  const r = await response;\n  if (!r.ok) {\n    throw new Error(`Failed to load '${path}': request failed.`);\n  }\n  return new Uint8Array(await r.arrayBuffer());\n}\n\n/**\n * Currently loadScript is only used once to load `pyodide.asm.js`.\n * @param url\n * @async\n * @private\n */\nexport let loadScript: (url: string) => Promise<void>;\n\nif (IN_BROWSER_MAIN_THREAD) {\n  // browser\n  loadScript = async (url) => await import(/* webpackIgnore: true */ url);\n} else if (IN_BROWSER_WEB_WORKER) {\n  // webworker\n  loadScript = async (url) => {\n    try {\n      // use importScripts in classic web worker\n      globalThis.importScripts(url);\n    } catch (e) {\n      // importScripts throws TypeError in a module type web worker, use import instead\n      if (e instanceof TypeError) {\n        await import(/* webpackIgnore: true */ url);\n      } else {\n        throw e;\n      }\n    }\n  };\n} else if (IN_NODE) {\n  loadScript = nodeLoadScript;\n} else {\n  throw new Error(\"Cannot determine runtime environment\");\n}\n\n/**\n * Load a text file and executes it as Javascript\n * @param url The path to load. May be a url or a relative file system path.\n * @private\n */\nasync function nodeLoadScript(url: string) {\n  if (url.startsWith(\"file://\")) {\n    // handle file:// with filesystem operations rather than with fetch.\n    url = url.slice(\"file://\".length);\n  }\n  if (url.includes(\"://\")) {\n    // If it's a url, load it with fetch then eval it.\n    nodeVmMod.runInThisContext(await (await fetch(url)).text());\n  } else {\n    // Otherwise, hopefully it is a relative path we can load from the file\n    // system.\n    await import(/* webpackIgnore: true */ nodeUrlMod.pathToFileURL(url).href);\n  }\n}\n\nexport async function loadLockFile(lockFileURL: string): Promise<Lockfile> {\n  if (IN_NODE) {\n    await initNodeModules();\n    const package_string = await nodeFsPromisesMod.readFile(lockFileURL, {\n      encoding: \"utf8\",\n    });\n    return JSON.parse(package_string);\n  } else {\n    let response = await fetch(lockFileURL);\n    return await response.json();\n  }\n}\n\n/**\n * Calculate the directory name of the current module.\n * This is used to guess the indexURL when it is not provided.\n */\nexport async function calculateDirname(): Promise<string> {\n  if (IN_NODE_COMMONJS) {\n    return __dirname;\n  }\n\n  let err: Error;\n  try {\n    throw new Error();\n  } catch (e) {\n    err = e as Error;\n  }\n  let fileName = ErrorStackParser.parse(err)[0].fileName!;\n\n  if (IN_NODE_ESM) {\n    const nodePath = await import(\"node:path\");\n    const nodeUrl = await import(\"node:url\");\n\n    // FIXME: We would like to use import.meta.url here,\n    // but mocha seems to mess with compiling typescript files to ES6.\n    return nodeUrl.fileURLToPath(nodePath.dirname(fileName));\n  }\n\n  const indexOfLastSlash = fileName.lastIndexOf(pathSep);\n  if (indexOfLastSlash === -1) {\n    throw new Error(\n      \"Could not extract indexURL path from pyodide module location\",\n    );\n  }\n  return fileName.slice(0, indexOfLastSlash);\n}\n","// @ts-nocheck\n\n/** @private */\nexport const IN_NODE =\n  typeof process === \"object\" &&\n  typeof process.versions === \"object\" &&\n  typeof process.versions.node === \"string\" &&\n  typeof process.browser ===\n    \"undefined\"; /* This last condition checks if we run the browser shim of process */\n\n/** @private */\nexport const IN_NODE_COMMONJS =\n  IN_NODE &&\n  typeof module !== \"undefined\" &&\n  typeof module.exports !== \"undefined\" &&\n  typeof require !== \"undefined\" &&\n  typeof __dirname !== \"undefined\";\n\n/** @private */\nexport const IN_NODE_ESM = IN_NODE && !IN_NODE_COMMONJS;\n\n/** @private */\nexport const IN_DENO = typeof Deno !== \"undefined\"; // just in case...\n\n/** @private */\nexport const IN_BROWSER = !IN_NODE && !IN_DENO;\n\n/** @private */\nexport const IN_BROWSER_MAIN_THREAD =\n  IN_BROWSER &&\n  typeof window === \"object\" &&\n  typeof document === \"object\" &&\n  typeof document.createElement === \"function\" &&\n  typeof sessionStorage === \"object\" &&\n  typeof importScripts !== \"function\";\n\n/** @private */\nexport const IN_BROWSER_WEB_WORKER =\n  IN_BROWSER && typeof importScripts === \"function\" && typeof self === \"object\";\n\n/** @private */\nexport const IN_SAFARI =\n  typeof navigator === \"object\" &&\n  typeof navigator.userAgent === \"string\" &&\n  navigator.userAgent.indexOf(\"Chrome\") == -1 &&\n  navigator.userAgent.indexOf(\"Safari\") > -1;\n\n/**\n * Detects the current environment and returns a record with the results.\n * This function is useful for debugging and testing purposes.\n * @private\n */\nexport function detectEnvironment(): Record<string, boolean> {\n  return {\n    IN_NODE: IN_NODE,\n    IN_NODE_COMMONJS: IN_NODE_COMMONJS,\n    IN_NODE_ESM: IN_NODE_ESM,\n    IN_DENO: IN_DENO,\n    IN_BROWSER: IN_BROWSER,\n    IN_BROWSER_MAIN_THREAD: IN_BROWSER_MAIN_THREAD,\n    IN_BROWSER_WEB_WORKER: IN_BROWSER_WEB_WORKER,\n    IN_SAFARI: IN_SAFARI,\n  };\n}\n","import { Module } from \"./types\";\n\n/**\n * @private\n */\nexport function initializeNativeFS(module: Module) {\n  const FS = module.FS;\n  const MEMFS = module.FS.filesystems.MEMFS;\n  const PATH = module.PATH;\n\n  const nativeFSAsync = {\n    // DIR_MODE: {{{ cDefine('S_IFDIR') }}} | 511 /* 0777 */,\n    // FILE_MODE: {{{ cDefine('S_IFREG') }}} | 511 /* 0777 */,\n    DIR_MODE: 16384 | 511,\n    FILE_MODE: 32768 | 511,\n    mount: function (mount: any) {\n      if (!mount.opts.fileSystemHandle) {\n        throw new Error(\"opts.fileSystemHandle is required\");\n      }\n\n      // reuse all of the core MEMFS functionality\n      return MEMFS.mount.apply(null, arguments);\n    },\n    syncfs: async (mount: any, populate: Boolean, callback: Function) => {\n      try {\n        const local = nativeFSAsync.getLocalSet(mount);\n        const remote = await nativeFSAsync.getRemoteSet(mount);\n        const src = populate ? remote : local;\n        const dst = populate ? local : remote;\n        await nativeFSAsync.reconcile(mount, src, dst);\n        callback(null);\n      } catch (e) {\n        callback(e);\n      }\n    },\n    // Returns file set of emscripten's filesystem at the mountpoint.\n    getLocalSet: (mount: any) => {\n      let entries = Object.create(null);\n\n      function isRealDir(p: string) {\n        return p !== \".\" && p !== \"..\";\n      }\n\n      function toAbsolute(root: string) {\n        return (p: string) => {\n          return PATH.join2(root, p);\n        };\n      }\n\n      let check = FS.readdir(mount.mountpoint)\n        .filter(isRealDir)\n        .map(toAbsolute(mount.mountpoint));\n\n      while (check.length) {\n        let path = check.pop();\n        let stat = FS.stat(path);\n\n        if (FS.isDir(stat.mode)) {\n          check.push.apply(\n            check,\n            FS.readdir(path).filter(isRealDir).map(toAbsolute(path)),\n          );\n        }\n\n        entries[path] = { timestamp: stat.mtime, mode: stat.mode };\n      }\n\n      return { type: \"local\", entries: entries };\n    },\n    // Returns file set of the real, on-disk filesystem at the mountpoint.\n    getRemoteSet: async (mount: any) => {\n      // TODO: this should be a map.\n      const entries = Object.create(null);\n\n      const handles = await getFsHandles(mount.opts.fileSystemHandle);\n      for (const [path, handle] of handles) {\n        if (path === \".\") continue;\n\n        entries[PATH.join2(mount.mountpoint, path)] = {\n          timestamp:\n            handle.kind === \"file\"\n              ? (await handle.getFile()).lastModifiedDate\n              : new Date(),\n          mode:\n            handle.kind === \"file\"\n              ? nativeFSAsync.FILE_MODE\n              : nativeFSAsync.DIR_MODE,\n        };\n      }\n\n      return { type: \"remote\", entries, handles };\n    },\n    loadLocalEntry: (path: string) => {\n      const lookup = FS.lookupPath(path);\n      const node = lookup.node;\n      const stat = FS.stat(path);\n\n      if (FS.isDir(stat.mode)) {\n        return { timestamp: stat.mtime, mode: stat.mode };\n      } else if (FS.isFile(stat.mode)) {\n        node.contents = MEMFS.getFileDataAsTypedArray(node);\n        return {\n          timestamp: stat.mtime,\n          mode: stat.mode,\n          contents: node.contents,\n        };\n      } else {\n        throw new Error(\"node type not supported\");\n      }\n    },\n    storeLocalEntry: (path: string, entry: any) => {\n      if (FS.isDir(entry[\"mode\"])) {\n        FS.mkdirTree(path, entry[\"mode\"]);\n      } else if (FS.isFile(entry[\"mode\"])) {\n        FS.writeFile(path, entry[\"contents\"], { canOwn: true });\n      } else {\n        throw new Error(\"node type not supported\");\n      }\n\n      FS.chmod(path, entry[\"mode\"]);\n      FS.utime(path, entry[\"timestamp\"], entry[\"timestamp\"]);\n    },\n    removeLocalEntry: (path: string) => {\n      var stat = FS.stat(path);\n\n      if (FS.isDir(stat.mode)) {\n        FS.rmdir(path);\n      } else if (FS.isFile(stat.mode)) {\n        FS.unlink(path);\n      }\n    },\n    loadRemoteEntry: async (handle: any) => {\n      if (handle.kind === \"file\") {\n        const file = await handle.getFile();\n        return {\n          contents: new Uint8Array(await file.arrayBuffer()),\n          mode: nativeFSAsync.FILE_MODE,\n          timestamp: file.lastModifiedDate,\n        };\n      } else if (handle.kind === \"directory\") {\n        return {\n          mode: nativeFSAsync.DIR_MODE,\n          timestamp: new Date(),\n        };\n      } else {\n        throw new Error(\"unknown kind: \" + handle.kind);\n      }\n    },\n    storeRemoteEntry: async (handles: any, path: string, entry: any) => {\n      const parentDirHandle = handles.get(PATH.dirname(path));\n      const handle = FS.isFile(entry.mode)\n        ? await parentDirHandle.getFileHandle(PATH.basename(path), {\n            create: true,\n          })\n        : await parentDirHandle.getDirectoryHandle(PATH.basename(path), {\n            create: true,\n          });\n      if (handle.kind === \"file\") {\n        const writable = await handle.createWritable();\n        await writable.write(entry.contents);\n        await writable.close();\n      }\n      handles.set(path, handle);\n    },\n    removeRemoteEntry: async (handles: any, path: string) => {\n      const parentDirHandle = handles.get(PATH.dirname(path));\n      await parentDirHandle.removeEntry(PATH.basename(path));\n      handles.delete(path);\n    },\n    reconcile: async (mount: any, src: any, dst: any) => {\n      let total = 0;\n\n      const create: Array<string> = [];\n      Object.keys(src.entries).forEach(function (key) {\n        const e = src.entries[key];\n        const e2 = dst.entries[key];\n        if (\n          !e2 ||\n          (FS.isFile(e.mode) &&\n            e[\"timestamp\"].getTime() > e2[\"timestamp\"].getTime())\n        ) {\n          create.push(key);\n          total++;\n        }\n      });\n      // sort paths in ascending order so directory entries are created\n      // before the files inside them\n      create.sort();\n\n      const remove: Array<string> = [];\n      Object.keys(dst.entries).forEach(function (key) {\n        if (!src.entries[key]) {\n          remove.push(key);\n          total++;\n        }\n      });\n      // sort paths in descending order so files are deleted before their\n      // parent directories\n      remove.sort().reverse();\n\n      if (!total) {\n        return;\n      }\n\n      const handles = src.type === \"remote\" ? src.handles : dst.handles;\n\n      for (const path of create) {\n        const relPath = PATH.normalize(\n          path.replace(mount.mountpoint, \"/\"),\n        ).substring(1);\n        if (dst.type === \"local\") {\n          const handle = handles.get(relPath);\n          const entry = await nativeFSAsync.loadRemoteEntry(handle);\n          nativeFSAsync.storeLocalEntry(path, entry);\n        } else {\n          const entry = nativeFSAsync.loadLocalEntry(path);\n          await nativeFSAsync.storeRemoteEntry(handles, relPath, entry);\n        }\n      }\n\n      for (const path of remove) {\n        if (dst.type === \"local\") {\n          nativeFSAsync.removeLocalEntry(path);\n        } else {\n          const relPath = PATH.normalize(\n            path.replace(mount.mountpoint, \"/\"),\n          ).substring(1);\n          await nativeFSAsync.removeRemoteEntry(handles, relPath);\n        }\n      }\n    },\n  };\n\n  module.FS.filesystems.NATIVEFS_ASYNC = nativeFSAsync;\n}\n\nconst getFsHandles = async (dirHandle: any) => {\n  const handles: any = [];\n\n  async function collect(curDirHandle: any) {\n    for await (const entry of curDirHandle.values()) {\n      handles.push(entry);\n      if (entry.kind === \"directory\") {\n        await collect(entry);\n      }\n    }\n  }\n\n  await collect(dirHandle);\n\n  const result = new Map();\n  result.set(\".\", dirHandle);\n  for (const handle of handles) {\n    const relativePath = (await dirHandle.resolve(handle)).join(\"/\");\n    result.set(relativePath, handle);\n  }\n  return result;\n};\n","/** @private */\n\nimport { ConfigType } from \"./pyodide\";\nimport { initializeNativeFS } from \"./nativefs\";\nimport { loadBinaryFile, getBinaryResponse } from \"./compat\";\nimport { API, PreRunFunc } from \"./types\";\n\n/**\n * @private\n * @hidden\n */\nexport interface EmscriptenSettings {\n  readonly noImageDecoding?: boolean;\n  readonly noAudioDecoding?: boolean;\n  readonly noWasmDecoding?: boolean;\n  readonly preRun: readonly PreRunFunc[];\n  readonly quit: (status: number, toThrow: Error) => void;\n  readonly print?: (a: string) => void;\n  readonly printErr?: (a: string) => void;\n  readonly arguments: readonly string[];\n  readonly instantiateWasm?: (\n    imports: { [key: string]: any },\n    successCallback: (\n      instance: WebAssembly.Instance,\n      module: WebAssembly.Module,\n    ) => void,\n  ) => void;\n  readonly API: API;\n  readonly locateFile: (file: string) => string;\n\n  exited?: { readonly status: number; readonly toThrow: Error };\n  noInitialRun?: boolean;\n  INITIAL_MEMORY?: number;\n}\n\n/**\n * Get the base settings to use to load Pyodide.\n *\n * @private\n */\nexport function createSettings(config: ConfigType): EmscriptenSettings {\n  const settings: EmscriptenSettings = {\n    noImageDecoding: true,\n    noAudioDecoding: true,\n    noWasmDecoding: false,\n    preRun: getFileSystemInitializationFuncs(config),\n    quit(status: number, toThrow: Error) {\n      // It's a little bit hacky that we set this on the settings object but\n      // it's not that easy to get access to the Module object from here.\n      settings.exited = { status, toThrow };\n      throw toThrow;\n    },\n    print: config.stdout,\n    printErr: config.stderr,\n    arguments: config.args,\n    API: { config } as API,\n    // Emscripten calls locateFile exactly one time with argument\n    // pyodide.asm.wasm to get the URL it should download it from.\n    //\n    // If we set instantiateWasm the return value of locateFile actually is\n    // unused, but Emscripten calls it anyways. We set instantiateWasm except\n    // when compiling with source maps, see comment in getInstantiateWasmFunc().\n    //\n    // It also is called when Emscripten tries to find a dependency of a shared\n    // library but it failed to find it in the file system. But for us that\n    // means dependency resolution has already failed and we want to throw an\n    // error anyways.\n    locateFile: (path: string) => config.indexURL + path,\n    instantiateWasm: getInstantiateWasmFunc(config.indexURL),\n  };\n  return settings;\n}\n\n/**\n * Make the home directory inside the virtual file system,\n * then change the working directory to it.\n *\n * @param Module The Emscripten Module.\n * @param path The path to the home directory.\n * @private\n */\nfunction createHomeDirectory(path: string): PreRunFunc {\n  return function (Module) {\n    const fallbackPath = \"/\";\n    try {\n      Module.FS.mkdirTree(path);\n    } catch (e) {\n      console.error(`Error occurred while making a home directory '${path}':`);\n      console.error(e);\n      console.error(`Using '${fallbackPath}' for a home directory instead`);\n      path = fallbackPath;\n    }\n    Module.FS.chdir(path);\n  };\n}\n\nfunction setEnvironment(env: { [key: string]: string }): PreRunFunc {\n  return function (Module) {\n    Object.assign(Module.ENV, env);\n  };\n}\n\n/**\n * Mount local directories to the virtual file system. Only for Node.js.\n * @param mounts The list of paths to mount.\n */\nfunction mountLocalDirectories(mounts: string[]): PreRunFunc {\n  return (Module) => {\n    for (const mount of mounts) {\n      Module.FS.mkdirTree(mount);\n      Module.FS.mount(Module.FS.filesystems.NODEFS, { root: mount }, mount);\n    }\n  };\n}\n\n/**\n * Install the Python standard library to the virtual file system.\n *\n * Previously, this was handled by Emscripten's file packager (pyodide.asm.data).\n * However, using the file packager means that we have only one version\n * of the standard library available. We want to be able to use different\n * versions of the standard library, for example:\n *\n * - Use compiled(.pyc) or uncompiled(.py) standard library.\n * - Remove unused modules or add additional modules using bundlers like pyodide-pack.\n *\n * @param stdlibURL The URL for the Python standard library\n */\nfunction installStdlib(stdlibURL: string): PreRunFunc {\n  const stdlibPromise: Promise<Uint8Array> = loadBinaryFile(stdlibURL);\n  return (Module) => {\n    /* @ts-ignore */\n    const pymajor = Module._py_version_major();\n    /* @ts-ignore */\n    const pyminor = Module._py_version_minor();\n\n    Module.FS.mkdirTree(\"/lib\");\n    Module.FS.mkdirTree(`/lib/python${pymajor}.${pyminor}/site-packages`);\n\n    Module.addRunDependency(\"install-stdlib\");\n\n    stdlibPromise\n      .then((stdlib: Uint8Array) => {\n        Module.FS.writeFile(`/lib/python${pymajor}${pyminor}.zip`, stdlib);\n      })\n      .catch((e) => {\n        console.error(\"Error occurred while installing the standard library:\");\n        console.error(e);\n      })\n      .finally(() => {\n        Module.removeRunDependency(\"install-stdlib\");\n      });\n  };\n}\n\n/**\n * Initialize the virtual file system, before loading Python interpreter.\n * @private\n */\nfunction getFileSystemInitializationFuncs(config: ConfigType): PreRunFunc[] {\n  let stdLibURL;\n  if (config.stdLibURL != undefined) {\n    stdLibURL = config.stdLibURL;\n  } else {\n    stdLibURL = config.indexURL + \"python_stdlib.zip\";\n  }\n\n  return [\n    installStdlib(stdLibURL),\n    createHomeDirectory(config.env.HOME),\n    setEnvironment(config.env),\n    mountLocalDirectories(config._node_mounts),\n    initializeNativeFS,\n  ];\n}\n\nfunction getInstantiateWasmFunc(\n  indexURL: string,\n): EmscriptenSettings[\"instantiateWasm\"] {\n  if (SOURCEMAP) {\n    // According to the docs:\n    //\n    // \"Sanitizers or source map is currently not supported if overriding\n    // WebAssembly instantiation with Module.instantiateWasm.\"\n    // https://emscripten.org/docs/api_reference/module.html?highlight=instantiatewasm#Module.instantiateWasm\n    //\n    // I haven't checked if this is actually a problem in practice.\n    return;\n  }\n  const { binary, response } = getBinaryResponse(indexURL + \"pyodide.asm.wasm\");\n  return function (\n    imports: { [key: string]: any },\n    successCallback: (\n      instance: WebAssembly.Instance,\n      module: WebAssembly.Module,\n    ) => void,\n  ) {\n    (async function () {\n      try {\n        let res: WebAssembly.WebAssemblyInstantiatedSource;\n        if (response) {\n          res = await WebAssembly.instantiateStreaming(response, imports);\n        } else {\n          res = await WebAssembly.instantiate(await binary, imports);\n        }\n        const { instance, module } = res;\n        // When overriding instantiateWasm, in asan builds, we also need\n        // to take care of creating the WasmOffsetConverter\n        // @ts-ignore\n        if (typeof WasmOffsetConverter !== \"undefined\") {\n          // @ts-ignore\n          wasmOffsetConverter = new WasmOffsetConverter(wasmBinary, module);\n        }\n        successCallback(instance, module);\n      } catch (e) {\n        console.warn(\"wasm instantiation failed!\");\n        console.warn(e);\n      }\n    })();\n\n    return {}; // Compiling asynchronously, no exports.\n  };\n}\n","/**\n *\n * The Pyodide version.\n *\n * The version here is a Python version, following :pep:`440`. This is different\n * from the version in ``package.json`` which follows the node package manager\n * version convention.\n */\nexport const version: string = \"0.26.1\";\n","/**\n * The main bootstrap code for loading pyodide.\n */\nimport {\n  calculateDirname,\n  loadScript,\n  initNodeModules,\n  resolvePath,\n  loadLockFile,\n} from \"./compat\";\n\nimport { createSettings } from \"./emscripten-settings\";\nimport { version } from \"./version\";\n\nimport type { PyodideInterface } from \"./api.js\";\nimport type { TypedArray, Module } from \"./types\";\nimport type { EmscriptenSettings } from \"./emscripten-settings\";\nimport type { PackageData } from \"./load-package\";\nimport { SnapshotConfig } from \"./snapshot\";\nexport type { PyodideInterface, TypedArray };\n\nexport { version, type PackageData };\n\ndeclare function _createPyodideModule(\n  settings: EmscriptenSettings,\n): Promise<Module>;\n\n/**\n * See documentation for loadPyodide.\n * @hidden\n */\nexport type ConfigType = {\n  indexURL: string;\n  packageCacheDir: string;\n  lockFileURL: string;\n  fullStdLib?: boolean;\n  stdLibURL?: string;\n  stdin?: () => string;\n  stdout?: (msg: string) => void;\n  stderr?: (msg: string) => void;\n  jsglobals?: object;\n  args: string[];\n  _node_mounts: string[];\n  env: { [key: string]: string };\n  packages: string[];\n  _makeSnapshot: boolean;\n  enableRunUntilComplete: boolean;\n};\n\n/**\n * Load the main Pyodide wasm module and initialize it.\n *\n * @returns The :ref:`js-api-pyodide` module.\n * @memberof globalThis\n * @async\n * @example\n * async function main() {\n *   const pyodide = await loadPyodide({\n *     fullStdLib: true,\n *     stdout: (msg) => console.log(`Pyodide: ${msg}`),\n *   });\n *   console.log(\"Loaded Pyodide\");\n * }\n * main();\n */\nexport async function loadPyodide(\n  options: {\n    /**\n     * The URL from which Pyodide will load the main Pyodide runtime and\n     * packages. It is recommended that you leave this unchanged, providing an\n     * incorrect value can cause broken behavior.\n     *\n     * Default: The url that Pyodide is loaded from with the file name\n     * (``pyodide.js`` or ``pyodide.mjs``) removed.\n     */\n    indexURL?: string;\n\n    /**\n     * The file path where packages will be cached in node. If a package\n     * exists in ``packageCacheDir`` it is loaded from there, otherwise it is\n     * downloaded from the JsDelivr CDN and then cached into ``packageCacheDir``.\n     * Only applies when running in node; ignored in browsers.\n     *\n     * Default: same as indexURL\n     */\n    packageCacheDir?: string;\n\n    /**\n     * The URL from which Pyodide will load the Pyodide ``pyodide-lock.json`` lock\n     * file. You can produce custom lock files with :py:func:`micropip.freeze`.\n     * Default: ```${indexURL}/pyodide-lock.json```\n     */\n    lockFileURL?: string;\n    /**\n     * Load the full Python standard library. Setting this to false excludes\n     * unvendored modules from the standard library.\n     * Default: ``false``\n     */\n    fullStdLib?: boolean;\n    /**\n     * The URL from which to load the standard library ``python_stdlib.zip``\n     * file. This URL includes the most of the Python standard library. Some\n     * stdlib modules were unvendored, and can be loaded separately\n     * with ``fullStdLib: true`` option or by their package name.\n     * Default: ```${indexURL}/python_stdlib.zip```\n     */\n    stdLibURL?: string;\n    /**\n     * Override the standard input callback. Should ask the user for one line of\n     * input. The :js:func:`pyodide.setStdin` function is more flexible and\n     * should be preferred.\n     */\n    stdin?: () => string;\n    /**\n     * Override the standard output callback. The :js:func:`pyodide.setStdout`\n     * function is more flexible and should be preferred in most cases, but\n     * depending on the ``args`` passed to ``loadPyodide``, Pyodide may write to\n     * stdout on startup, which can only be controlled by passing a custom\n     * ``stdout`` function.\n     */\n    stdout?: (msg: string) => void;\n    /**\n     * Override the standard error output callback. The\n     * :js:func:`pyodide.setStderr` function is more flexible and should be\n     * preferred in most cases, but depending on the ``args`` passed to\n     * ``loadPyodide``, Pyodide may write to stdout on startup, which can only\n     * be controlled by passing a custom ``stdout`` function.\n     */\n    stderr?: (msg: string) => void;\n    /**\n     * The object that Pyodide will use for the ``js`` module.\n     * Default: ``globalThis``\n     */\n    jsglobals?: object;\n    /**\n     * Command line arguments to pass to Python on startup. See `Python command\n     * line interface options\n     * <https://docs.python.org/3.10/using/cmdline.html#interface-options>`_ for\n     * more details. Default: ``[]``\n     */\n    args?: string[];\n    /**\n     * Environment variables to pass to Python. This can be accessed inside of\n     * Python at runtime via :py:data:`os.environ`. Certain environment variables change\n     * the way that Python loads:\n     * https://docs.python.org/3.10/using/cmdline.html#environment-variables\n     * Default: ``{}``.\n     * If ``env.HOME`` is undefined, it will be set to a default value of\n     * ``\"/home/pyodide\"``\n     */\n    env?: { [key: string]: string };\n    /**\n     * A list of packages to load as Pyodide is initializing.\n     *\n     * This is the same as loading the packages with\n     * :js:func:`pyodide.loadPackage` after Pyodide is loaded except using the\n     * ``packages`` option is more efficient because the packages are downloaded\n     * while Pyodide bootstraps itself.\n     */\n    packages?: string[];\n    /**\n     * Opt into the old behavior where :js:func:`PyProxy.toString() <pyodide.ffi.PyProxy.toString>`\n     * calls :py:func:`repr` and not :py:class:`str() <str>`.\n     * @deprecated\n     */\n    pyproxyToStringRepr?: boolean;\n    /**\n     * Make loop.run_until_complete() function correctly using stack switching\n     */\n    enableRunUntilComplete?: boolean;\n    /**\n     * @ignore\n     */\n    _node_mounts?: string[];\n    /**\n     * @ignore\n     */\n    _makeSnapshot?: boolean;\n    /**\n     * @ignore\n     */\n    _loadSnapshot?:\n      | Uint8Array\n      | ArrayBuffer\n      | PromiseLike<Uint8Array | ArrayBuffer>;\n  } = {},\n): Promise<PyodideInterface> {\n  await initNodeModules();\n  let indexURL = options.indexURL || (await calculateDirname());\n  indexURL = resolvePath(indexURL); // A relative indexURL causes havoc.\n  if (!indexURL.endsWith(\"/\")) {\n    indexURL += \"/\";\n  }\n  options.indexURL = indexURL;\n\n  const default_config = {\n    fullStdLib: false,\n    jsglobals: globalThis,\n    stdin: globalThis.prompt ? globalThis.prompt : undefined,\n    lockFileURL: indexURL + \"pyodide-lock.json\",\n    args: [],\n    _node_mounts: [],\n    env: {},\n    packageCacheDir: indexURL,\n    packages: [],\n    enableRunUntilComplete: false,\n  };\n  const config = Object.assign(default_config, options) as ConfigType;\n  if (!config.env.HOME) {\n    config.env.HOME = \"/home/pyodide\";\n  }\n  const emscriptenSettings = createSettings(config);\n  const API = emscriptenSettings.API;\n  API.lockFilePromise = loadLockFile(config.lockFileURL);\n\n  // If the pyodide.asm.js script has been imported, we can skip the dynamic import\n  // Users can then do a static import of the script in environments where\n  // dynamic importing is not allowed or not desirable, like module-type service workers\n  if (typeof _createPyodideModule !== \"function\") {\n    const scriptSrc = `${config.indexURL}pyodide.asm.js`;\n    await loadScript(scriptSrc);\n  }\n\n  let snapshot: Uint8Array | undefined = undefined;\n  if (options._loadSnapshot) {\n    const snp = await options._loadSnapshot;\n    if (ArrayBuffer.isView(snp)) {\n      snapshot = snp;\n    } else {\n      snapshot = new Uint8Array(snp);\n    }\n    emscriptenSettings.noInitialRun = true;\n    // @ts-ignore\n    emscriptenSettings.INITIAL_MEMORY = snapshot.length;\n  }\n\n  // _createPyodideModule is specified in the Makefile by the linker flag:\n  // `-s EXPORT_NAME=\"'_createPyodideModule'\"`\n  const Module = await _createPyodideModule(emscriptenSettings);\n  // Handle early exit\n  if (emscriptenSettings.exited) {\n    throw emscriptenSettings.exited.toThrow;\n  }\n  if (options.pyproxyToStringRepr) {\n    API.setPyProxyToStringMethod(true);\n  }\n\n  if (API.version !== version) {\n    throw new Error(\n      `\\\nPyodide version does not match: '${version}' <==> '${API.version}'. \\\nIf you updated the Pyodide version, make sure you also updated the 'indexURL' parameter passed to loadPyodide.\\\n`,\n    );\n  }\n  // Disable further loading of Emscripten file_packager stuff.\n  Module.locateFile = (path: string) => {\n    throw new Error(\"Didn't expect to load any more file_packager files!\");\n  };\n\n  let snapshotConfig: SnapshotConfig | undefined = undefined;\n  if (snapshot) {\n    snapshotConfig = API.restoreSnapshot(snapshot);\n  }\n  // runPython works starting after the call to finalizeBootstrap.\n  const pyodide = API.finalizeBootstrap(snapshotConfig);\n  API.sys.path.insert(0, API.config.env.HOME);\n\n  if (!pyodide.version.includes(\"dev\")) {\n    // Currently only used in Node to download packages the first time they are\n    // loaded. But in other cases it's harmless.\n    API.setCdnUrl(`https://cdn.jsdelivr.net/pyodide/v${pyodide.version}/full/`);\n  }\n  API._pyodide.set_excepthook();\n  await API.packageIndexReady;\n  // I think we want this initializeStreams call to happen after\n  // packageIndexReady? I don't remember why.\n  API.initializeStreams(config.stdin, config.stdout, config.stderr);\n  return pyodide;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}