{"ast":null,"code":"var _jsxFileName = \"/Users/javier/Projects/QRCodeGen/qr-app/src/components/QRCodeGen.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyComponent() {\n  _s();\n  const [qrCodeData, setQrCodeData] = useState(null); // State to store QR code image data\n\n  useEffect(() => {\n    const loadPyodide = async () => {\n      const pyodide = await loadPyodide();\n\n      // Access Python modules from your files\n      const qrData = await pyodide.runPython('import qr_data; from qr_generator import generate_qr_code; return generate_qr_code(qr_data.get_data())');\n      setQrCodeData(qrData); // Update state with QR code data\n    };\n    loadPyodide();\n  }, []);\n\n  // ... (rest of your component logic)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(MyComponent, \"emhiQhSSbuf8mPHAlp/7VX0SI+g=\");\n_c = MyComponent;\nfunction QRCodeGen() {\n  _s2();\n  const [text, setText] = useState('');\n  const [radio, setRadio] = useState('a');\n  const handleText = event => {\n    setText(event.target.value);\n  };\n  const handleRadio = event => {\n    setRadio(event.target.value);\n  };\n  const generateQR = async () => {\n    await generateQRCode(text, radio);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"px-[10%] py-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"font-black text-4xl\",\n      children: \"QR Code Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Short description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        onChange: handleText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"text\",\n          checked: radio === 'text',\n          onChange: handleRadio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), \"Text\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"url\",\n          checked: radio === 'url',\n          onChange: handleRadio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), \"URL\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateQR,\n        children: \"Generate !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s2(QRCodeGen, \"J5J94sOigb5XTFmUfe6kaUJAVJ0=\");\n_c2 = QRCodeGen;\nexport default QRCodeGen;\nvar _c, _c2;\n$RefreshReg$(_c, \"MyComponent\");\n$RefreshReg$(_c2, \"QRCodeGen\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MyComponent","_s","qrCodeData","setQrCodeData","loadPyodide","pyodide","qrData","runPython","fileName","_jsxFileName","lineNumber","columnNumber","_c","QRCodeGen","_s2","text","setText","radio","setRadio","handleText","event","target","value","handleRadio","generateQR","generateQRCode","className","children","type","onChange","checked","onClick","_c2","$RefreshReg$"],"sources":["/Users/javier/Projects/QRCodeGen/qr-app/src/components/QRCodeGen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction MyComponent() {\n    const [qrCodeData, setQrCodeData] = useState(null);  // State to store QR code image data\n\n    useEffect(() => {\n        const loadPyodide = async () => {\n            const pyodide = await loadPyodide();\n\n            // Access Python modules from your files\n            const qrData = await pyodide.runPython('import qr_data; from qr_generator import generate_qr_code; return generate_qr_code(qr_data.get_data())');\n\n            setQrCodeData(qrData); // Update state with QR code data\n        };\n\n        loadPyodide();\n    }, []);\n\n    // ... (rest of your component logic)\n\n    return (\n        <div>\n            \n        </div>\n    );\n}\n\nfunction QRCodeGen() {\n    const [text, setText] = useState('')\n    const [radio, setRadio] = useState('a')\n    \n    const handleText = (event) => {\n        setText(event.target.value)\n    }\n    const handleRadio = (event) => {\n        setRadio(event.target.value)\n    }\n    \n    const generateQR = async () => {\n        await generateQRCode(text, radio)\n    }\n    \n    return (\n        <div className = \"px-[10%] py-10\">\n            <h1 className=\"font-black text-4xl\">QR Code Generator</h1>\n            <p>Short description</p>\n            <div className=\"text-center\">\n                <input type=\"text\" value={text} onChange={handleText}></input>\n                <label>\n                    <input type=\"radio\" value=\"text\" checked={radio === 'text'} onChange={handleRadio} />\n                    Text\n                </label>\n                <label>\n                    <input type=\"radio\" value=\"url\" checked={radio === 'url'} onChange={handleRadio} />\n                    URL\n                </label>\n                <button onClick={generateQR}>Generate !</button>\n            </div>\n        </div>\n    );\n}\n\n\n\nexport default QRCodeGen"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}