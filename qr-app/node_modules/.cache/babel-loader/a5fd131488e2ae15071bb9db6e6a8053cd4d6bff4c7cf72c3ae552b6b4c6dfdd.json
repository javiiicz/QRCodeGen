{"ast":null,"code":"var _jsxFileName = \"/Users/javier/Projects/QRCodeGen/qr-app/src/components/QRCodeGen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QRCodeGen() {\n  _s();\n  const [text, setText] = useState(''); // Text state\n  const [radio, setRadio] = useState('L'); // Radio State defaul \"L\"\n  const [qrURL, setqrURL] = useState('');\n  const generateQRCode = async () => {\n    try {\n      const response = await axios.post('/generate_qr', {\n        text,\n        radio\n      }); // Send data to backend\n      setqrURL(URL.createObjectURL(new Blob([response.data], {\n        type: 'image/png'\n      }))); // Create image URL\n    } catch (error) {\n      console.error('Error generating QR code:', error);\n    }\n  };\n  const handleText = event => {\n    setText(event.target.value);\n  };\n  const handleRadio = event => {\n    setRadio(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"px-[10%] py-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"font-black text-4xl\",\n      children: \"QR Code Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Short description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center grid grod-rows-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          generateQRCode();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: text,\n          onChange: handleText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"text\",\n            checked: radio === 'text',\n            onChange: handleRadio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), \"Text\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"url\",\n            checked: radio === 'url',\n            onChange: handleRadio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), \"URL\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Generate !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), QRCodeData && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: QRCodeData,\n        alt: \"Generated QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(QRCodeGen, \"kv895nWIucn6o3Pu/gpObrjUTQA=\");\n_c = QRCodeGen;\nexport default QRCodeGen;\nvar _c;\n$RefreshReg$(_c, \"QRCodeGen\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","QRCodeGen","_s","text","setText","radio","setRadio","qrURL","setqrURL","generateQRCode","response","post","URL","createObjectURL","Blob","data","type","error","console","handleText","event","target","value","handleRadio","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","onChange","checked","QRCodeData","src","alt","_c","$RefreshReg$"],"sources":["/Users/javier/Projects/QRCodeGen/qr-app/src/components/QRCodeGen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nfunction QRCodeGen() {\n    const [text, setText] = useState('') // Text state\n    const [radio, setRadio] = useState('L') // Radio State defaul \"L\"\n    const [qrURL, setqrURL] = useState('')\n    \n    const generateQRCode = async () => {\n        try {\n            const response = await axios.post('/generate_qr', { text, radio }); // Send data to backend\n            setqrURL(URL.createObjectURL(new Blob([response.data], { type: 'image/png' }))); // Create image URL\n        } catch (error) {\n            console.error('Error generating QR code:', error);\n        }\n    };\n    \n    const handleText = (event) => {\n        setText(event.target.value);\n    }\n    \n    const handleRadio = (event) => {\n        setRadio(event.target.value);\n    }\n    \n    return (\n        <div className = \"px-[10%] py-10\">\n            <h1 className=\"font-black text-4xl\">QR Code Generator</h1>\n            <p>Short description</p>\n            <div className=\"text-center grid grod-rows-3\">\n                <form onSubmit={(e) => {\n                          e.preventDefault()\n                          generateQRCode()\n                      }}>\n                    <input type=\"text\" value={text} onChange={handleText}></input>\n                    <label>\n                        <input type=\"radio\" value=\"text\" checked={radio === 'text'} onChange={handleRadio} />\n                        Text\n                    </label>\n                    <label>\n                        <input type=\"radio\" value=\"url\" checked={radio === 'url'} onChange={handleRadio} />\n                        URL\n                    </label>\n                    <button type=\"submit\">Generate !</button>\n                </form>    \n                { QRCodeData && (\n                    <img src={QRCodeData} alt=\"Generated QR Code\"/>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default QRCodeGen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}