{"ast":null,"code":"var _jsxFileName = \"/Users/javier/Projects/QRCodeGen/qr-app/src/components/QRCodeGen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QRCodeGen() {\n  _s();\n  const [text, setText] = useState(''); // Text state\n  const [radio, setRadio] = useState('L'); // Radio State defaul \"L\"\n\n  const handleText = event => {\n    setText(event.target.value);\n  };\n  const handleRadio = event => {\n    setRadio(event.target.value);\n  };\n  useEffect(() => {\n    const loadPyodide = async () => {\n      const pyodide = await loadPyodide();\n      const generateQRCode = async (text, ec) => {\n        const qrData = await pyodide.runPython('import qr_data; from qr_generator import generate_qr_code; return generate_qr_code(qr_data.get_data())');\n      };\n      setQrCodeData(qrData); // Update state with QR code data\n    };\n    loadPyodide();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"px-[10%] py-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"font-black text-4xl\",\n      children: \"QR Code Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Short description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        onChange: handleText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"text\",\n          checked: radio === 'text',\n          onChange: handleRadio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), \"Text\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"url\",\n          checked: radio === 'url',\n          onChange: handleRadio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), \"URL\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateQRCode,\n        children: \"Generate !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), qr]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(QRCodeGen, \"+2pSd1aNMRf5qAoYVk8cI9308LY=\");\n_c = QRCodeGen;\nexport default QRCodeGen;\nvar _c;\n$RefreshReg$(_c, \"QRCodeGen\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","QRCodeGen","_s","text","setText","radio","setRadio","handleText","event","target","value","handleRadio","loadPyodide","pyodide","generateQRCode","ec","qrData","runPython","setQrCodeData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","checked","onClick","qr","_c","$RefreshReg$"],"sources":["/Users/javier/Projects/QRCodeGen/qr-app/src/components/QRCodeGen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction QRCodeGen() {\n    const [text, setText] = useState('') // Text state\n    const [radio, setRadio] = useState('L') // Radio State defaul \"L\"\n    \n    const handleText = (event) => {\n        setText(event.target.value)\n    }\n    const handleRadio = (event) => {\n        setRadio(event.target.value)\n    }\n    \n\n\n    useEffect(() => {\n        const loadPyodide = async () => {\n            const pyodide = await loadPyodide();\n            \n            const generateQRCode = async (text, ec)=>{\n                const qrData = await pyodide.runPython('import qr_data; from qr_generator import generate_qr_code; return generate_qr_code(qr_data.get_data())');\n            }\n           \n            setQrCodeData(qrData); // Update state with QR code data\n        };\n\n        loadPyodide();\n    }, []);\n    \n    return (\n        <div className = \"px-[10%] py-10\">\n            <h1 className=\"font-black text-4xl\">QR Code Generator</h1>\n            <p>Short description</p>\n            <div className=\"text-center\">\n                <input type=\"text\" value={text} onChange={handleText}></input>\n                <label>\n                    <input type=\"radio\" value=\"text\" checked={radio === 'text'} onChange={handleRadio} />\n                    Text\n                </label>\n                <label>\n                    <input type=\"radio\" value=\"url\" checked={radio === 'url'} onChange={handleRadio} />\n                    URL\n                </label>\n                <button onClick={generateQRCode}>Generate !</button>\n                { qr}\n            </div>\n        </div>\n    );\n}\n\n\n\nexport default QRCodeGen"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}